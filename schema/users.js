const mongoose = require("mongoose");
const mongoosePaginate = require("mongoose-paginate-v2");

const UserSchema = mongoose.Schema({
  username: { type: String },
  displayname: { type: String, required: true },
  firstname: { type: String, default: "" },
  lastname: { type: String, default: "" },
  url: { type: String, default: "" },
  language: { type: String, default: "" },
  email: { type: String },
  password: { type: String, required: true },
  Country: { type: String, default: "" },
  State: { type: String, default: "" },
  Address1: { type: String, default: "" },
  Address2: { type: String, default: "" },
  city: { type: String, default: "" },
  referral: { type: String, default: "" },
  mobileNumber: { type: String, default: "" },
  businessType: { type: String, default: "" },
  businessName: { type: String, default: "" },
  incorporationPlace: { type: String, default: "" },
  registerType: { type: String, default: "" },
  emailOtp: { type: String, default: "" },
  mobileOtp: { type: String, default: "" },
  forgetOtp: { type: String, default: "" },
  forgotEmailotp: { type: String, default: "" },
  loginattempt: { type: Number, default: 0 },
  logouttime: { type: Date },
  otp: { type: Number, default: "" },
  otpstatus: { type: Number, default: 0 },
  zip: { type: String, default: "" },
  Addressproof: { type: String, default: "" },
  AddressproofStatus: { type: Number, default: 0 },
  IdProof: { type: String, default: "" },
  IdProofStatus: { type: Number, default: 0 },
  BankProof: { type: String, default: "" },
  BankProofStatus: { type: Number, default: 0 },
  tfaenablekey: { type: String, default: "" },
  tfa_url: { type: String, default: "" },
  tfastatus: { type: Number, default: 0 },
  kycstatus: { type: Number, default: 0 },
  loginStatus: { type: Number, default: 0 },
  disputeStatus: { type: Number, default: 1 },
  status: { type: Number, default: 0 },
  verifyEmail: { type: Number, default: 0 },
  referralCode: { type: String, default: "" },
  verifyMobile: { type: Number, default: 0 },
  expireEmail: { type: Number, default: 0 },
  forgotPass: { type: Number, default: 0 },
  dialcode: { type: String, default: "" },
  deposit_status: { type: Number, default: 0 },
  card_purchase_status: { type: Number, default: 0 },
  bank_deposit_status: { type: Number, default: 0 },
  fiat_spot_status: { type: Number, default: 0 },
  otpGenerateAt: { type: Date, default: Date.now },
  createdDate: { type: Date, default: Date.now },
  modifiedDate: { type: Date, default: Date.now },
  account_status: { type: Number, default: 1 },
  referral_id: { type: String, default: "" },
  referred_by: { type: mongoose.Types.ObjectId, index: true },
  referralByCode: { type: String, default: "" },
  withdrawOtp: { type: String, default: "" },
  uuid: { type: String, default: "" },
  AntiphisingStatus: { type: Number, default: 0 },
  AntiphisingEnabledStatus: { type: Number, default: 0 },
  tradestatus: { type: Number, default: 0 },
  KYCreward: { type: Number, default: 0 },
  Depositreward: { type: Number, default: 0 },
  Tradereward: { type: Number, default: 0 },
  applicantId: { type: String, default: null },
  ptk_fee_status: { type: Number, default: 0 },
  ratings: [
    {
      stars: { type: Number, required: true }, // 1..5
      ratedBy: { type: mongoose.Types.ObjectId, ref: "Users" }, // who gave this rating
      orderId: { type: mongoose.Types.ObjectId, ref: "p2pconfirmOrder" }, // optional link
      date: { type: Date, default: Date.now },
    },
  ],
  vipBadge: { type: Boolean, default: false },
});
UserSchema.plugin(mongoosePaginate);

module.exports = mongoose.model("Users", UserSchema);
